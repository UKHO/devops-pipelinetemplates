parameters:
  - name: organization
    displayName: Organization ID in Snyk
    type: string
  - name: serviceConnectionToken
    displayName: Snyk Service Account Token
    type: string
  - name: targetFile
    displayName: Custom path to IAC file to test (other scans whole repo)
    type: string
    default: ''
  - name: severityThreshold
    displayName: Testing severity threshold
    type: string
    default: medium
    values:
    - low
    - medium
    - high
    - critical
  - name: additionalArguments
    displayName: Additional command-line args for Snyk CLI 
    type: string
    default: ''

steps:
  - bash: |
      snyk iac test ${{ parameters.targetFile }} \
      --org=${{ parameters.organization }} \
      --severity-threshold=${{ parameters.severityThreshold }} \
      --json-file-output=iac-results.json \
      ${{ parameters.additionalArguments }}
    displayName: Perform IAC Scan
    condition: eq( variables['Agent.OS'], 'Linux' )
    enabled: eq( variables['Agent.OS'], 'Linux' )
    env:
      SNYK_TOKEN: ${{ parameters.serviceConnectionToken }}
  - pwsh: |
      snyk iac test ${{ parameters.targetFile }} `
      --org=${{ parameters.organization }} `
      --severity-threshold=${{ parameters.severityThreshold }} `
      --json-file-output=iac-results.json `
      ${{ parameters.additionalArguments }}
    displayName: Perform IAC Scan
    condition: eq( variables['Agent.OS'], 'Windows_NT' )
    enabled: eq( variables['Agent.OS'], 'Windows_NT' )
    env:
      SNYK_TOKEN: ${{ parameters.serviceConnectionToken }}
  - task: PublishPipelineArtifact@1
    inputs:
      targetPath: $(System.DefaultWorkingDirectory)/iac-results.json
      artifact: iac-results.json
      publishLocation: 'pipeline'
    displayName: 'Publish artifact: CodeScanningResults'
    condition: always()