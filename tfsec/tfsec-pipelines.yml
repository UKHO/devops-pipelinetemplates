parameters: 
- name: WorkingDirectory
  default: $(System.DefaultWorkingDirectory)
- name: Exclusions
  default: azure-network-no-public-ingress,azure-network-no-public-egress   
  

steps:
- checkout: self
- bash: mkdir ${{parameters.WorkingDirectory}}/TFSecReport
  displayName: 'tfsec - Create output directory'
- bash: docker run --rm -v ${{parameters.WorkingDirectory}}:/src aquasec/tfsec /src --exclude ${{parameters.Exclusions}} --include-passed
  displayName: 'tfsec - Scan terraform'
- bash: docker run --rm -v ${{parameters.WorkingDirectory}}:/src aquasec/tfsec /src --exclude ${{parameters.Exclusions}} --include-passed --format JUnit > ${{parameters.WorkingDirectory}}/TFSecReport/TFSec-Report.xml
  displayName: 'tfsec - Create scan results report'
  condition: always()
 # Publish the results of the TFSec analysis as Test Results to the pipeline
- task: PublishTestResults@2
  displayName: 'tfsec - Publish scan results report'
  condition: succeededOrFailed()
  inputs:
    testResultsFormat: 'JUnit' # Options JUnit, NUnit, VSTest, xUnit, cTest
    testResultsFiles: '${{parameters.WorkingDirectory}}/TFSecReport/TFSec-Report.xml'
    searchFolder: '${{parameters.WorkingDirectory}}/TFSecReport'
    testRunTitle: TFSec Scan
    mergeTestResults: false
    failTaskOnFailedTests: true
    publishRunAttachments: true
