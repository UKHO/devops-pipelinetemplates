parameters:
- name: WorkingDirectory
  default: $(System.DefaultWorkingDirectory)
- name: Exclusions
  default: AVD-AZU-0047

steps:
- checkout: self
- script: |
    mkdir ${{parameters.WorkingDirectory}}/TrivyReport
    docker run --rm -v ${{parameters.WorkingDirectory}}:/src aquasec/trivy config ./ --exclude {{parameters.Exclusions}}
  displayName: 'Run Trivy Vulnerability Scan'
- script: |
    docker run --rm -v ${{parameters.WorkingDirectory}}:/src aquasec/trivy config ./ --format json > ${{parameters.WorkingDirectory}}/TrivyReport/Trivy-Report.json
  displayName: 'Generate Trivy JSON Report'
- script: |
    docker run --rm -v ${{parameters.WorkingDirectory}}:/src aquasec/trivy --format junit -o ${{parameters.WorkingDirectory}}/TrivyReport/Trivy-Report.xml
  displayName: 'Generate Trivy JUnit Report'
- task: PublishTestResults@2
  displayName: 'Publish Trivy JUnit Report'
  inputs:
    testResultsFiles: '${{parameters.WorkingDirectory}}/TrivyReport/Trivy-Report.xml'
    testRunTitle: 'Trivy Vulnerability Scan'
    testResultsFormat: 'JUnit'
- task: PublishBuildArtifacts@1
  displayName: 'Publish Trivy JSON Report'
  inputs:
    PathtoPublish: '${{parameters.WorkingDirectory}}/TrivyReport'
    ArtifactName: 'TrivyReport'










###WORKING###
#parameters:
#- name: WorkingDirectory
#  default: $(System.DefaultWorkingDirectory)
#- name: Exclusions
#  default: AVD-AZU-0047
#
#steps:
#- checkout: self
#- script: |
#    mkdir ${{parameters.WorkingDirectory}}/TrivyReport
#    docker run --rm -v ${{parameters.WorkingDirectory}}:/src aquasec/trivy config ./ --exclude {{parameters.Exclusions}}
#  displayName: 'Run Trivy Vulnerability Scan'
#- script: |
#    docker run --rm -v ${{parameters.WorkingDirectory}}:/src aquasec/trivy config ./ --format json > ${{parameters.WorkingDirectory}}/TrivyReport/Trivy-Report.json
#  displayName: 'Generate Trivy JSON Report'
#- task: PublishBuildArtifacts@1
#  displayName: Publish Trivy JSON Report
#  inputs:
#    PathtoPublish: '${{parameters.WorkingDirectory}}/TrivyReport'
#    ArtifactName: 'TrivyReport'


###ORIGINAL####
#parameters:
#- name: WorkingDirectory
#  default: $(System.DefaultWorkingDirectory)
#- name: Exclusions
#  default: azure-network-no-public-ingress,azure-network-no-public-egress

#steps:
#- checkout: self
#- script: |
#    mkdir ${{parameters.WorkingDirectory}}/TrivyReport
#    docker run --rm -v ${{parameters.WorkingDirectory}}:/src aquasec/trivy config ./
#  displayName: 'Run Trivy Vulnerability Scan'
#- script: |
#    docker run --rm -v ${{parameters.WorkingDirectory}}:/src aquasec/trivy config ./ --format json > ${{parameters.WorkingDirectory}}/TrivyReport/Trivy-Report.json
#  displayName: 'Generate Trivy JUnit Report'
#- task: PublishTestResults@2
#  displayName: Publish Trivy JUnit Test Results
#  inputs:
#    testResultsFiles: '${{parameters.WorkingDirectory}}/TrivyReport/Trivy-Report.json'
#    testResultsFormat: 'json'
#    searchFolder: '${{parameters.WorkingDirectory}}/TrivyReport'
#    testRunTitle: Trivy Scan
#    mergeTestResults: false
#    failTaskOnFailedTests: true
#    publishRunAttachments: true

###Junit format
#parameters:
#- name: WorkingDirectory
#  default: $(System.DefaultWorkingDirectory)
#- name: Exclusions
#  default: AVD-AZU-0047,azure-network-no-public-egress

#steps:
#- checkout: self
#- bash: mkdir ${{parameters.WorkingDirectory}}/TrivyReport
#  displayName: 'Create Trivy output folder'
#- bash: docker run --rm -v ${{parameters.WorkingDirectory}}:/src aquasec/trivy config ./ --severity HIGH,CRITICAL
#  displayName: 'Run Trivy Vulnerability Scan'
#- script: |
#    docker run --rm -v ${{parameters.WorkingDirectory}}:/src aquasec/trivy config ./ --format junit > ${{parameters.WorkingDirectory}}/TrivyReport/Trivy-Report.xml
#  displayName: 'Generate Trivy JUnit Report & Filter Trivy Results (HIGH and CRITICAL)'
#  condition: always()
#- task: PublishTestResults@2
#  displayName: Publish Trivy JUnit Test Results
#  condition: succeededOrFailed()
#  inputs:
#    testResultsFormat: 'junit'
#    testResultsFiles: '${{parameters.WorkingDirectory}}/TrivyReport/Trivy-Report.xml'
#    searchFolder: '${{parameters.WorkingDirectory}}/TrivyReport'
#    testRunTitle: 'Trivy Scan'
#    mergeTestResults: false
#    failTaskOnFailedTests: true
#    publishRunAttachments: true
