parameters:
- name: WorkingDirectory
  default: $(System.DefaultWorkingDirectory)
- name: Exclusions
  default: azure-network-no-public-ingress,azure-network-no-public-egress

steps:
- checkout: self
- script: |
    mkdir ${{parameters.WorkingDirectory}}/TrivyReport
    docker run --rm -v ${{parameters.WorkingDirectory}}:/src aquasec/trivy config ./
  displayName: 'Run Trivy Vulnerability Scan'
- script: |
    docker run --rm -v ${{parameters.WorkingDirectory}}:/src aquasec/trivy config ./
  displayName: 'Generate Trivy Report'
- script: |
    docker run --rm -v ${{parameters.WorkingDirectory}}:/src -w /src aquasec/trivy -f junit > ${{parameters.WorkingDirectory}}/TrivyReport/Trivy-Report.xml
  displayName: 'Convert Trivy JSON to JUnit'
- task: PublishTestResults@2
  displayName: Publish Trivy JUnit Test Results
  inputs:
    testResultsFiles: '${{parameters.WorkingDirectory}}/TrivyReport/Trivy-Report.xml'
    testResultsFormat: 'JUnit'
    testRunTitle: 'Trivy Scan'




    
###WORKING###
#parameters:
#- name: WorkingDirectory
#  default: $(System.DefaultWorkingDirectory)
#- name: Exclusions
#  default: azure-network-no-public-ingress,azure-network-no-public-egress
#
#steps:
#- checkout: self
#- script: |
#    mkdir ${{parameters.WorkingDirectory}}/TrivyReport
#    docker run --rm -v ${{parameters.WorkingDirectory}}:/src aquasec/trivy config ./
#  displayName: 'Run Trivy Vulnerability Scan'
#- script: |
#    docker run --rm -v ${{parameters.WorkingDirectory}}:/src aquasec/trivy config ./ --format json > ${{parameters.WorkingDirectory}}/TrivyReport/Trivy-Report.json
#  displayName: 'Generate Trivy JSON Report'
#- task: PublishBuildArtifacts@1
#  displayName: Publish Trivy JSON Report
#  inputs:
#    PathtoPublish: '${{parameters.WorkingDirectory}}/TrivyReport'
#    ArtifactName: 'TrivyReport'

###ORIGINAL####
#parameters:
#- name: WorkingDirectory
#  default: $(System.DefaultWorkingDirectory)
#- name: Exclusions
#  default: azure-network-no-public-ingress,azure-network-no-public-egress

#steps:
#- checkout: self
#- script: |
#    mkdir ${{parameters.WorkingDirectory}}/TrivyReport
#    docker run --rm -v ${{parameters.WorkingDirectory}}:/src aquasec/trivy config ./
#  displayName: 'Run Trivy Vulnerability Scan'
#- script: |
#    docker run --rm -v ${{parameters.WorkingDirectory}}:/src aquasec/trivy config ./ --format json > ${{parameters.WorkingDirectory}}/TrivyReport/Trivy-Report.json
#  displayName: 'Generate Trivy JUnit Report'
#- task: PublishTestResults@2
#  displayName: Publish Trivy JUnit Test Results
#  inputs:
#    testResultsFiles: '${{parameters.WorkingDirectory}}/TrivyReport/Trivy-Report.json'
#    testResultsFormat: 'json'
#    searchFolder: '${{parameters.WorkingDirectory}}/TrivyReport'
#    testRunTitle: Trivy Scan
#    mergeTestResults: false
#    failTaskOnFailedTests: true
#    publishRunAttachments: true
